<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Java learning paths</title>
    <url>/2020/01/04/Java%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/</url>
    <content><![CDATA[<p>写给自己的Java程序员学习路线，希望自己能够坚持下去</p>
<a id="more"></a>

<h4 id="第一阶段"><a href="#第一阶段" class="headerlink" title="第一阶段"></a>第一阶段</h4><h5 id="数据结构与算法"><a href="#数据结构与算法" class="headerlink" title="数据结构与算法"></a>数据结构与算法</h5><p>1.简单的数据结构</p>
<ul>
<li>基础概念</li>
<li>数组</li>
<li>链表</li>
<li>队列</li>
<li>栈</li>
</ul>
<p>2.树</p>
<ul>
<li>二叉树</li>
<li>平衡二叉树</li>
<li>最优二叉树（哈夫曼树）</li>
<li>红黑树 </li>
<li>B、B+、B*树</li>
<li>LSM树</li>
</ul>
<p>3.图</p>
<ul>
<li>图的基础知识和两种遍历方式</li>
<li>最小生成树(Prim算法和Kruskal算法)</li>
<li>最短路径算法(Dijkstra(迪杰斯特拉)算法和Floyd(弗洛伊德)算法)</li>
<li>拓扑排序</li>
</ul>
<p>4.排序算法(8种排序算法和时间空间复杂度)</p>
<p>5.java中排序工具</p>
<ul>
<li>数组排序</li>
<li>集合工具类排序</li>
</ul>
<p>6.常见算法</p>
<ul>
<li>字符串比较KMP算法</li>
<li>剪枝算法</li>
<li>布隆过滤器</li>
<li>回溯算法</li>
<li>动态规划</li>
<li>贪心</li>
</ul>
<h5 id="Java基础"><a href="#Java基础" class="headerlink" title="Java基础"></a>Java基础</h5><p>1、java集合</p>
<ul>
<li>各个java集合类 </li>
<li>使用场景以及性能分析</li>
</ul>
<p>2、常用类</p>
<ul>
<li>基础类型封装类</li>
<li>BeanUtil工具类</li>
<li>string系列类</li>
<li>java各种关键字（transient、final、static等等）</li>
<li>Math系列</li>
<li>system系列</li>
</ul>
<p>3、javaIO</p>
<p>4、java泛型</p>
<p>5、多态以及实现原理（主要是内存上的结构）</p>
<p>6、java注解和反射</p>
<p>7、java中的语法糖</p>
<p>8、java8、9、10新特性（主要是8）</p>
<p>9、java异常</p>
<p>10、其他零碎知识点（比如创建对象的4种方式）</p>
<h5 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h5><p>1、创建型模式（5种）</p>
<p>2、结构性模式（7种）</p>
<p>3、行为性模式（11种）</p>
<h5 id="JVM"><a href="#JVM" class="headerlink" title="JVM"></a>JVM</h5><p>1、jvm内存结构</p>
<p>2、类的加载机制</p>
<p>3、GC算法、分析、优化、工具</p>
<h4 id="第二阶段"><a href="#第二阶段" class="headerlink" title="第二阶段"></a>第二阶段</h4><p>一、SSM框架</p>
<ul>
<li>spring（先使用）</li>
<li>mybatis</li>
<li>springmvc</li>
<li>SSM整合（包括使用maven整合）</li>
</ul>
<p>二、相关工具</p>
<ul>
<li>maven</li>
<li>git</li>
<li>IDEA</li>
<li>eclipse</li>
<li>日志框架</li>
<li>Jenkins</li>
</ul>
<p>三、java并发编程（内容比较多）</p>
<p>四、java网络编程</p>
<ul>
<li>序列化</li>
<li>网络编程基础（主要看书、TCP/IP这些）</li>
<li>NIO</li>
<li>netty</li>
<li>远程调用（RMI、Thrift、gRPC）</li>
</ul>
<p>五、数据库</p>
<ul>
<li><p>Mysql(本科学)、Oracle</p>
</li>
<li><p>nosql（redis、MongoDB）</p>
</li>
</ul>
<h4 id="第三阶段"><a href="#第三阶段" class="headerlink" title="第三阶段"></a>第三阶段</h4><p>一、应用服务器</p>
<ul>
<li><p>Tomcat</p>
</li>
<li><p>Jboss</p>
</li>
<li><p>Jetty</p>
</li>
<li><p>Weblogic</p>
</li>
</ul>
<p>二、linux（不需要完成整个运维师的知识、会使用和底层原理）</p>
<p>三、分布式系统（这里面内容很多、框架也很多）</p>
<ul>
<li>Dubbo</li>
<li>Zookeeper</li>
<li>三大消息中间件</li>
<li>分布式缓存</li>
<li>springSession</li>
<li>高并发分流ngix</li>
<li>文件系统fastDFS</li>
<li>数据扩容mycat</li>
<li>Docker</li>
</ul>
<p>四、微服务架构</p>
<ul>
<li>springBoot</li>
<li>SpringCloud</li>
</ul>
<p>五、安全</p>
<ul>
<li><p>加密机制</p>
</li>
<li><p>shiro安全验证框架</p>
</li>
<li><p>其他安全知识</p>
</li>
<li><p>一致性算法</p>
</li>
</ul>
<p>其他的还有大数据与云计算等等框架</p>
]]></content>
      <tags>
        <tag>Java Study</tag>
      </tags>
  </entry>
  <entry>
    <title>Java interview</title>
    <url>/2020/01/04/Java%E9%9D%A2%E8%AF%95%E9%A2%98/</url>
    <content><![CDATA[<p>Java程序员面试题(刷题)</p>
<a id="more"></a>
]]></content>
      <tags>
        <tag>JAVA Interview</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringMVC course</title>
    <url>/2020/01/04/SpringMVC%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<p>SpringMVC教程(IDEA工具创建Maven工程)</p>
<a id="more"></a>

<h3 id="入门操作"><a href="#入门操作" class="headerlink" title="入门操作"></a>入门操作</h3><p>目录如下：(target是运行tomcat自建的)：<br><img src="https://img-blog.csdnimg.cn/20200104125119465.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0ODI0NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>java文件夹设为Source Root<br><img src="https://img-blog.csdnimg.cn/20200104125417340.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0ODI0NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>resources文件夹设为Resource Root</p>
]]></content>
      <tags>
        <tag>SSM</tag>
      </tags>
  </entry>
  <entry>
    <title>Segmented storage management</title>
    <url>/2019/12/31/%E5%88%86%E6%AE%B5%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<p>分段存储管理方式</p>
<a id="more"></a>]]></content>
      <tags>
        <tag>OS</tag>
      </tags>
  </entry>
  <entry>
    <title>Paging storage management</title>
    <url>/2019/12/31/%E5%88%86%E9%A1%B5%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<p>分页存储管理方式</p>
<a id="more"></a>]]></content>
      <tags>
        <tag>OS</tag>
      </tags>
  </entry>
  <entry>
    <title>Continuously allocated storage management</title>
    <url>/2019/12/31/%E8%BF%9E%E7%BB%AD%E5%88%86%E9%85%8D%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<p>连续分配存储管理方式</p>
<a id="more"></a>]]></content>
      <tags>
        <tag>OS</tag>
      </tags>
  </entry>
  <entry>
    <title>Java vector</title>
    <url>/2019/12/08/Java-vector%E7%B1%BB/</url>
    <content><![CDATA[<p>Java vector 类详解</p>
<a id="more"></a>
<p>Vector 可实现自动增长的对象数组</p>
<p>java.util.vector提供了向量类(Vector)以实现类似动态数组的功能</p>
<p>创建了一个向量类的对象类后，可以向其中随意插入不同类的对象，即不需要顾及类型、也不需预选定向量的容量， 并可以方便的查找。</p>
<p>对于预先不知或不愿预先定义数组的大小，并且需要频繁地进行查找，插入，删除工作的情况，可以考虑使用向量类。</p>
<p>向量类提供了三个构造方法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public vector()</span><br><span class="line">public vector(int nitialcapacity,int capacityIncrement)</span><br><span class="line">public vector(int nitialcapacity)</span><br></pre></td></tr></table></figure>
<p>使用第一种方法，系统会自动对向量进行管理，若使用后两种方法，则系统会根据参数(nitialcapacity)设定向量对象的容量<br>(即向量对象可存储数据的大小)，当真正存放的数据个数超过容量时，系统会扩充向量对象的存储容量。</p>
<p>参数capacityIncrement给定了每次扩充的扩充值。当capacityIncrement为0的时候，则每一次扩充一倍，利用这个功能可以<br>优化存储。</p>
<p>Vector 的<code>方法</code>：</p>
<h5 id="插入功能"><a href="#插入功能" class="headerlink" title="插入功能"></a>插入功能</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(1)public final synchronized void adddElement(Object obj) </span><br><span class="line">插入的应是对象而不是数值，所以插入数值时要注意将数组转换成相应的对象</span><br><span class="line"></span><br><span class="line">(2)public final synchronized void setElementAt(Object obj,int index) </span><br><span class="line">将index处的对象设置成obj，原来的对象将被覆盖</span><br><span class="line"></span><br><span class="line">(3)public final synchronized void insertElementAt(Object obj,int index) </span><br><span class="line">在index指定的位置插入obj，原来对象以及此后的对象依次往后顺延</span><br></pre></td></tr></table></figure>
<h5 id="删除功能"><a href="#删除功能" class="headerlink" title="删除功能"></a>删除功能</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(1)public final synchronized void removeElement(Object obj)</span><br><span class="line">从向量中删除obj,若有多个存在，则从向量头开始试，删除找到的第一个与obj相同的向量成员。</span><br><span class="line"></span><br><span class="line">(2)public final synchronized void removeAllElement()</span><br><span class="line">删除向量所有的对象 </span><br><span class="line"></span><br><span class="line">(3)public fianl synchronized void removeElementAt(int index) </span><br><span class="line">删除index所指的地方的对象</span><br></pre></td></tr></table></figure>
<h5 id="查询搜索功能"><a href="#查询搜索功能" class="headerlink" title="查询搜索功能"></a>查询搜索功能</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(1)public final int indexOf(Object obj) </span><br><span class="line">从向量头开始搜索obj,返回所遇到的第一个obj对应的下标，若不存在此obj,返回-1. </span><br><span class="line"></span><br><span class="line">(2)public final synchronized int indexOf(Object obj,int index) </span><br><span class="line">从index所表示的下标处开始搜索obj. </span><br><span class="line"></span><br><span class="line">(3)public final int lastindexOf(Object obj) </span><br><span class="line">从向量尾部开始逆向搜索obj. </span><br><span class="line"></span><br><span class="line">(4)public final synchornized int lastIndex(Object obj,int index) </span><br><span class="line">从index所表示的下标处由尾至头逆向搜索obj. </span><br><span class="line"></span><br><span class="line">(5)public final synchornized firstElement() </span><br><span class="line">获取向量对象中的首个obj </span><br><span class="line"></span><br><span class="line">(6)public final synchornized Object lastElement() </span><br><span class="line">获取向量对象的最后一个obj</span><br></pre></td></tr></table></figure>
<h5 id="其他功能"><a href="#其他功能" class="headerlink" title="其他功能"></a>其他功能</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(1)public final int size(); </span><br><span class="line">   此方法用于获取向量元素的个数。它们返回值是向量中实际存在的元素个数，而非向量容量。可以调用方法capacity()来获取容量值。</span><br><span class="line"></span><br><span class="line">(2)public final synchronized void setSize(int newsize); </span><br><span class="line">   此方法用来定义向量的大小，若向量对象现有成员个数已经超过了newsize的值，则超过部分的多余元素会丢失。 </span><br><span class="line"></span><br><span class="line">程序中定义Enumeration类的一个对象Enumeration是java.util中的一个接口类， </span><br><span class="line"></span><br><span class="line">(3) public final synchronized Enumeration elements(); </span><br><span class="line">   此方法将向量对象对应到一个枚举类型。java.util包中的其他类中也都有这类方法，以便于用户获取对应的枚举类型。</span><br><span class="line">   在Enumeration中封装了有关枚举数据集合的方法。 </span><br><span class="line">   方法 hasMoreElement() 来判断集合中是否还有其他元素。方法 nextElement() 来获取下一个元素</span><br></pre></td></tr></table></figure>
<p>以下代码就是用hasMoreElement（）和 nextElement（）遍历Vector</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">import java.util.Enumeration;</span><br><span class="line">import java.util.Iterator;</span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.Vector;</span><br><span class="line"></span><br><span class="line">public class TestVector &#123;</span><br><span class="line">    public void test01() &#123;</span><br><span class="line">        Vector&lt;String&gt; hs = new Vector&lt;String&gt;();</span><br><span class="line">        hs.add(&quot;aa&quot;);</span><br><span class="line">        hs.add(&quot;bb&quot;);</span><br><span class="line">        hs.add(&quot;aa&quot;);</span><br><span class="line">        hs.add(&quot;cc&quot;);</span><br><span class="line">        hs.add(&quot;aa&quot;);</span><br><span class="line">        hs.add(&quot;dd&quot;);</span><br><span class="line">        printSet2(hs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void printSet(List hs) &#123;</span><br><span class="line">        Iterator iterator = hs.iterator();</span><br><span class="line">        while (iterator.hasNext()) &#123;</span><br><span class="line">            System.out.println(iterator.next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void printSet2(Vector&lt;String&gt; hs) &#123;</span><br><span class="line">        Enumeration&lt;String&gt; elements = hs.elements();</span><br><span class="line">        while (elements.hasMoreElements()) &#123;</span><br><span class="line">            System.out.println(elements.nextElement());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        new TestVector().test01();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>程序运行结果如图：</p>
<p><img src="https://img-blog.csdnimg.cn/20191228093556109.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0ODI0NDAw,size_16,color_FFFFFF,t_70" alt="result"></p>
]]></content>
      <tags>
        <tag>Java Class</tag>
      </tags>
  </entry>
  <entry>
    <title>Simple python grammer</title>
    <url>/2019/12/06/python%E7%AE%80%E5%8D%95%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<p>Python 简单语法</p>
<a id="more"></a>
<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><h4 id=""><a href="#" class="headerlink" title=""></a></h4><h3 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h3><h4 id="-1"><a href="#-1" class="headerlink" title=""></a></h4>]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>JVM introduce</title>
    <url>/2019/12/06/JVM%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<p>JVM(Java 虚拟机)的简单介绍</p>
<a id="more"></a>
<p>JVM是Java Virtual Machine(Java 虚拟机)的缩写，JVM是一种计算设备的规范，他是一个虚构出来的计算机，是通过在实际的计算机上仿真模拟各种计算机功能来实现的。<br>引入Java语言虚拟机后，Java语言在不同平台上运行时不需要重新编译。Java语言使用Java虚拟机屏蔽了与具体平台相关的信息，使得Java语言编译程序只需生成在Java虚拟机上运行的目标代码（字节码），就可以在多种平台上不加修改地运行。</p>
<h4 id="概述："><a href="#概述：" class="headerlink" title="概述："></a>概述：</h4><p>Java虚拟机有自己完善的硬件结构（如:处理器，堆栈，相应的指令系统so on.）</p>
<p>Java语言的可移植性：任何平台装有JVM，字节码文件(.class)就能够执行。“一次编译，多次执行”</p>
<h4 id="体系结构"><a href="#体系结构" class="headerlink" title="体系结构"></a>体系结构</h4><p>Java虚拟机共有五个模块组成：<br>类装载器子系统、运行时数据区、执行引擎、本地方法接口和垃圾收集模块<br>Java虚拟机不是真正的物理机，他没有寄存器，所以指令集是使用Java栈来存储中间数据，这样做的目的就是为了保持Java虚拟机的指令集尽量的紧凑，同时也便于JAVA虚拟机在那些只有很少通用寄存器的平台上实现。</p>
<h4 id="必要性"><a href="#必要性" class="headerlink" title="必要性"></a>必要性</h4><p>Java语言的一个最重要的一个特点是与平台的无关性。</p>
<h4 id="内存管理"><a href="#内存管理" class="headerlink" title="内存管理"></a>内存管理</h4><p>（1）对于Java运行时涉及到的存储区域主要包括程序计数器、Java虚拟机栈、本地方法栈、java堆、方法区以及直接内存等等。对于每个部分，都有其使用的条件。程序计数器主要是取下一条指令，在Java里面主要是取下一条指令的字节码文件；Java虚拟机栈主要是利用栈先进后出的特性存储局部变量表，动态链接等，主要包括堆内存和栈内存，对于程序员内存分析而言是特别重要的。本地方法栈与上边的栈基本作用差不多，只不过这里是为Java方法而服务。Java堆是内存管理中最大的一块，所有的线程共享这一块内容，同时该部分也是垃圾收集器的主要区域。</p>
<p>（2）虚拟机的垃圾回收机制是完善的，动态内存分配和回收是比较成熟的，在内存管理机制中，大部分都不需要我们考虑内存回收，只有Java堆和方法区需要我们考虑处理内存问题。一般的对于内存回收首先就是判断某一个部分是生存还是死亡，主要是通过下面二种算法：</p>
<ul>
<li><p>其一是引用计数算法，本算法实现简单，判定的效率也是比较高的，很多的软件都使用了该算法，但是主流的Java并没有选择该算法，核心的问题是该算法难以处理对象之间相互调用的问题。</p>
</li>
<li><p>其二是称可达性分析算法，该算法核心思想是依靠判断对象是否存活来实现的，本算法是通过一系列的GC ROOTS的对象作为起始点，采用搜索的算法遍历引用链，如果搜索过程中没有发现该节点，则认为该节点是不可达的，即可回收的，在Java里面，一般可以使用该算法处理问题。</p>
</li>
</ul>
<h4 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h4><ul>
<li>移植性</li>
<li>成熟</li>
<li>覆盖面</li>
</ul>
<h4 id="碎片回收"><a href="#碎片回收" class="headerlink" title="碎片回收"></a>碎片回收</h4><p>Java类的实例所需的存储空间是在堆上分配的。解释器具体承担为类实例分配空间的工作。解释器在为一个实例分配完存储空间后，便开始记录对该实例所占用的内存区域的使用。一旦对象使用完毕，便将其回收到堆中。在Java语言中，除了new语句外没有其他方法为一对象申请和释放内存。对内存进行释放和回收的工作是由Java运行系统承担的。这允许Java运行系统的设计者自己决定碎片回收的方法。在SUN公司开发的Java解释器和Hot Java环境中，碎片回收用后台线程的方式来执行。</p>
]]></content>
      <tags>
        <tag>JVM</tag>
      </tags>
  </entry>
  <entry>
    <title>Socket introduce</title>
    <url>/2019/12/06/socket%E5%A5%97%E6%8E%A5%E5%AD%97/</url>
    <content><![CDATA[<p>网络通信Socket套接字简单了解</p>
<a id="more"></a>
<h4 id="网络中进程之间如何通信？"><a href="#网络中进程之间如何通信？" class="headerlink" title="网络中进程之间如何通信？"></a>网络中进程之间如何通信？</h4><p>本地进程间的通信(IPC)有很多方式</p>
<ul>
<li>消息传递(管道、FIFO、消息队列)</li>
<li>同步(互斥量、条件变量、读写锁、文件和写记录锁、信号量)</li>
<li>共享内存(匿名的和具名的)</li>
<li>远程过程调用(Solaris门和Sun RPC)</li>
</ul>
<h4 id="什么是Socket？"><a href="#什么是Socket？" class="headerlink" title="什么是Socket？"></a>什么是Socket？</h4><p>socket起源于Unix，而Unix/Linux的基本哲学之一就是“一切皆文件”，都可以用“打开Open” —&gt; “读写Read/Write” —&gt; “关闭Close” 模式来操作。</p>
<p><code>理解：</code>Socket就是该模式的一个实现，socket即是一种特殊的文件，一些socket函数就是对其进行的操作(读写I/O、打开、关闭)。</p>
<h4 id="Socket的基本操作"><a href="#Socket的基本操作" class="headerlink" title="Socket的基本操作"></a>Socket的基本操作</h4><p>既然Socket为“open-write/read/-close”模式的一种实现，那么socket就提供了这些操作相对应的函数接口。<br>以TCP为例。</p>
<h5 id="socket-函数"><a href="#socket-函数" class="headerlink" title="socket()函数"></a>socket()函数</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int socket(int domain, int type, int protocol);</span><br></pre></td></tr></table></figure>
<h5 id="bind-函数"><a href="#bind-函数" class="headerlink" title="bind()函数"></a>bind()函数</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int bind(int sockfd, const struct sockaddr *addr, socklen_t addrlen);</span><br></pre></td></tr></table></figure>

<h5 id="listen-、connect-函数"><a href="#listen-、connect-函数" class="headerlink" title="listen()、connect()函数"></a>listen()、connect()函数</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int listen(int sockfd, int backlog);</span><br><span class="line">int connect(int sockfd, const struct sockaddr *addr, socklen_t addrlen);</span><br></pre></td></tr></table></figure>

<h5 id="accept-函数"><a href="#accept-函数" class="headerlink" title="accept()函数"></a>accept()函数</h5><h5 id="read-、write-函数等"><a href="#read-、write-函数等" class="headerlink" title="read()、write()函数等"></a>read()、write()函数等</h5><h5 id="close-函数"><a href="#close-函数" class="headerlink" title="close()函数"></a>close()函数</h5><h4 id="Socket中TCP的三次握手建立连接详解"><a href="#Socket中TCP的三次握手建立连接详解" class="headerlink" title="Socket中TCP的三次握手建立连接详解"></a>Socket中TCP的三次握手建立连接详解</h4><p><img src="https://img-blog.csdnimg.cn/20200103084153505.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0ODI0NDAw,size_16,color_FFFFFF,t_70" alt="三次握手"></p>
<h4 id="Socket中TCP的四次握手建立连接详解"><a href="#Socket中TCP的四次握手建立连接详解" class="headerlink" title="Socket中TCP的四次握手建立连接详解"></a>Socket中TCP的四次握手建立连接详解</h4><p><img src="https://img-blog.csdnimg.cn/20200103084353651.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0ODI0NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h4 id="一个例子"><a href="#一个例子" class="headerlink" title="一个例子"></a>一个例子</h4><p>服务器端代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;stdlib.h&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">#include&lt;errno.h&gt;</span><br><span class="line">#include&lt;sys/types.h&gt;</span><br><span class="line">#include&lt;sys/socket.h&gt;</span><br><span class="line">#include&lt;netinet/in.h&gt;</span><br><span class="line"></span><br><span class="line">#define MAXLINE 4096</span><br><span class="line"></span><br><span class="line">int main(int argc, char** argv)</span><br><span class="line">&#123;</span><br><span class="line">int listenfd, connfd;</span><br><span class="line">struct sockaddr_in servaddr;</span><br><span class="line">char buff[4096];</span><br><span class="line">int n;</span><br><span class="line"></span><br><span class="line">if( (listenfd = socket(AF_INET, SOCK_STREAM, 0)) == -1 )&#123;</span><br><span class="line">printf(&quot;create socket error: %s(errno: %d)/n&quot;,strerror(errno),errno);</span><br><span class="line">exit(0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">memset(&amp;servaddr, 0, sizeof(servaddr));</span><br><span class="line">servaddr.sin_family = AF_INET;</span><br><span class="line">servaddr.sin_addr.s_addr = htonl(INADDR_ANY);</span><br><span class="line">servaddr.sin_port = htons(6666);</span><br><span class="line"></span><br><span class="line">if( bind(listenfd, (struct sockaddr*)&amp;servaddr, sizeof(servaddr)) == -1)&#123;</span><br><span class="line">printf(&quot;bind socket error: %s(errno: %d)/n&quot;,strerror(errno),errno);</span><br><span class="line">exit(0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if( listen(listenfd, 10) == -1)&#123;</span><br><span class="line">printf(&quot;listen socket error: %s(errno: %d)/n&quot;,strerror(errno),errno);</span><br><span class="line">exit(0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">printf(&quot;======waiting for client&apos;s request======/n&quot;);</span><br><span class="line">while(1)&#123;</span><br><span class="line">if( (connfd = accept(listenfd, (struct sockaddr*)NULL, NULL)) == -1)&#123;</span><br><span class="line">printf(&quot;accept socket error: %s(errno: %d)&quot;,strerror(errno),errno);</span><br><span class="line">continue;</span><br><span class="line">&#125;</span><br><span class="line">n = recv(connfd, buff, MAXLINE, 0);</span><br><span class="line">buff[n] = &apos;/0&apos;;</span><br><span class="line">printf(&quot;recv msg from client: %s/n&quot;, buff);</span><br><span class="line">close(connfd);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">close(listenfd);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>客户端代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;stdlib.h&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">#include&lt;errno.h&gt;</span><br><span class="line">#include&lt;sys/types.h&gt;</span><br><span class="line">#include&lt;sys/socket.h&gt;</span><br><span class="line">#include&lt;netinet/in.h&gt;</span><br><span class="line"></span><br><span class="line">#define MAXLINE 4096</span><br><span class="line"></span><br><span class="line">int main(int argc, char** argv)</span><br><span class="line">&#123;</span><br><span class="line">int sockfd, n;</span><br><span class="line">char recvline[4096], sendline[4096];</span><br><span class="line">struct sockaddr_in servaddr;</span><br><span class="line"></span><br><span class="line">if( argc != 2)&#123;</span><br><span class="line">printf(&quot;usage: ./client &lt;ipaddress&gt;/n&quot;);</span><br><span class="line">exit(0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if( (sockfd = socket(AF_INET, SOCK_STREAM, 0)) &lt; 0)&#123;</span><br><span class="line">printf(&quot;create socket error: %s(errno: %d)/n&quot;, strerror(errno),errno);</span><br><span class="line">exit(0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">memset(&amp;servaddr, 0, sizeof(servaddr));</span><br><span class="line">servaddr.sin_family = AF_INET;</span><br><span class="line">servaddr.sin_port = htons(6666);</span><br><span class="line">if( inet_pton(AF_INET, argv[1], &amp;servaddr.sin_addr) &lt;= 0)&#123;</span><br><span class="line">printf(&quot;inet_pton error for %s/n&quot;,argv[1]);</span><br><span class="line">exit(0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if( connect(sockfd, (struct sockaddr*)&amp;servaddr, sizeof(servaddr)) &lt; 0)&#123;</span><br><span class="line">printf(&quot;connect error: %s(errno: %d)/n&quot;,strerror(errno),errno);</span><br><span class="line">exit(0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">printf(&quot;send msg to server: /n&quot;);</span><br><span class="line">fgets(sendline, 4096, stdin);</span><br><span class="line">if( send(sockfd, sendline, strlen(sendline), 0) &lt; 0)</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;send msg error: %s(errno: %d)/n&quot;, strerror(errno), errno);</span><br><span class="line">exit(0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">close(sockfd);</span><br><span class="line">exit(0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Socket</tag>
      </tags>
  </entry>
  <entry>
    <title>Computer network architecture</title>
    <url>/2019/12/06/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<p>计算机网络体系结构</p>
<a id="more"></a>
<h3 id="协议与划分层次"><a href="#协议与划分层次" class="headerlink" title="协议与划分层次"></a>协议与划分层次</h3><p>网络协议：</p>
<p>为进行网络中的数据交换而建立的规则、标准或约定成为网络协议。</p>
<p>划分层次：</p>
<p>1.语法：即数据与控制信息的结构或格式</p>
<p>2.语义：即需要发出何种信息，完成何种动作以及做出何种反应</p>
<p>3.同步：即事件实现顺序的详细说明</p>
]]></content>
      <tags>
        <tag>Computer Network</tag>
      </tags>
  </entry>
  <entry>
    <title>Maven project introduce</title>
    <url>/2019/12/06/maven%E9%A1%B9%E7%9B%AE/</url>
    <content><![CDATA[<p>Maven项目介绍</p>
<a id="more"></a>
]]></content>
      <tags>
        <tag>Maven</tag>
      </tags>
  </entry>
  <entry>
    <title>Mybatis</title>
    <url>/2019/12/06/mybatis/</url>
    <content><![CDATA[<p>Mybatis 框架的简单学习</p>
<h3 id=""><a href="#" class="headerlink" title=""></a></h3>]]></content>
      <categories>
        <category>back-end</category>
      </categories>
      <tags>
        <tag>SSM Framewwork</tag>
      </tags>
  </entry>
  <entry>
    <title>Stack</title>
    <url>/2019/12/06/%E6%A0%88/</url>
    <content><![CDATA[<p>数据结构 - 栈</p>
<a id="more"></a>
<h3 id="特点："><a href="#特点：" class="headerlink" title="特点："></a>特点：</h3><p>先进后出，后进先出</p>
]]></content>
      <tags>
        <tag>DS</tag>
      </tags>
  </entry>
  <entry>
    <title>List</title>
    <url>/2019/12/06/%E9%93%BE%E8%A1%A8/</url>
    <content><![CDATA[<p>数据结构 - 链表</p>
<a id="more"></a>
<h3 id="特点-优点"><a href="#特点-优点" class="headerlink" title="特点(优点):"></a>特点(优点):</h3><pre><code>I don&apos;t know ! 嘿嘿</code></pre>]]></content>
      <tags>
        <tag>DS</tag>
      </tags>
  </entry>
  <entry>
    <title>Tcp reliable transmission</title>
    <url>/2019/12/05/TCP%E7%9A%84%E5%8F%AF%E9%9D%A0%E4%BC%A0%E8%BE%93/</url>
    <content><![CDATA[<p>Tcp可靠传输</p>
<a id="more"></a>
<h3 id="可靠传输的要求："><a href="#可靠传输的要求：" class="headerlink" title="可靠传输的要求："></a>可靠传输的要求：</h3><pre><code>所谓的可靠传输，就是能保证数据的完整性，无差错、不丢失、不重复、并且按序到达</code></pre><h3 id="TCP可靠传输的机制原理"><a href="#TCP可靠传输的机制原理" class="headerlink" title="TCP可靠传输的机制原理"></a>TCP可靠传输的机制原理</h3><p>TCP首先采用三次握手建立连接、四次挥手来释放连接。</p>
<h4 id="三次握手过程："><a href="#三次握手过程：" class="headerlink" title="三次握手过程："></a>三次握手过程：</h4><p><img src="https://img-blog.csdnimg.cn/20191205092429572.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0ODI0NDAw,size_16,color_FFFFFF,t_70" alt="三次握手"></p>
<h4 id="四次挥手过程："><a href="#四次挥手过程：" class="headerlink" title="四次挥手过程："></a>四次挥手过程：</h4>]]></content>
      <tags>
        <tag>Computer Network</tag>
      </tags>
  </entry>
  <entry>
    <title>Queue</title>
    <url>/2019/12/02/%E9%98%9F%E5%88%97/</url>
    <content><![CDATA[<p>数据结构 - 队列</p>
<a id="more"></a>
<h3 id="特点："><a href="#特点：" class="headerlink" title="特点："></a>特点：</h3><pre><code>“先进先出，后进后出”</code></pre>]]></content>
      <tags>
        <tag>DS</tag>
      </tags>
  </entry>
  <entry>
    <title>Von neumann architecture</title>
    <url>/2019/12/02/%E5%86%AF%E8%AF%BA%E4%BE%9D%E6%9B%BC%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<p>冯诺依曼体系结构</p>
<a id="more"></a>
<h4 id="主要内容"><a href="#主要内容" class="headerlink" title="主要内容"></a>主要内容</h4><p>(1)采用存储程序方式，指令和数据不加区别混合存储在同一个存储器中，数据和程序在内存中是没有区别的,它们都是内存中的数据,当EIP指针指向哪 CPU就加载那段内存中的数据,如果是不正确的指令格式,CPU就会发生错误中断. 在现在CPU的保护模式中,每个内存段都有其描述符,这个描述符记录着这个内存段的访问权限(可读,可写,可执行).这就变相的指定了哪些内存中存储的是指令哪些是数据）指令和数据都可以送到运算器进行运算，即由指令组成的程序是可以修改的。</p>
<p>(2)存储器是按地址访问的线性编址的一维结构，每个单元的位数是固定的。</p>
<p>(3)指令由操作码和地址组成。操作码指明本指令的操作类型,地址码指明操作数和地址。操作数本身无数据类型的标志，它的数据类型由操作码确定。</p>
<p>(4)通过执行指令直接发出控制信号控制计算机的操作。指令在存储器中按其执行顺序存放，由指令计数器指明要执行的指令所在的单元地址。指令计数器只有一个，一般按顺序递增，但执行顺序可按运算结果或当时的外界条件而改变。</p>
<p>(5)以运算器为中心，I/O设备与存储器间的数据传送都要经过运算器。</p>
<p>(6)数据以二进制表示。</p>
<h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><p>(1)计算机处理的数据和指令一律用二进制数表示</p>
<p>(2)顺序执行程序:<br>    计算机运行过程中，把要执行的程序和处理的数据首先存入主存储器（内存），计算机执行程序时，将自动地并按顺序从主存储器中取出指令一条一条地执行，这一概念称作顺序执行程序。</p>
<p>(3)计算机硬件由运算器、控制器、存储器、输入设备和输出设备五大部分组成。</p>
]]></content>
      <tags>
        <tag>Principles Of Computer Composition</tag>
      </tags>
  </entry>
  <entry>
    <title>definite integration</title>
    <url>/2019/12/02/%E5%AE%9A%E7%A7%AF%E5%88%86/</url>
    <content><![CDATA[<p>高等数学 - 定积分</p>
<a id="more"></a>
<h3 id="hello"><a href="#hello" class="headerlink" title="hello"></a>hello</h3>]]></content>
      <tags>
        <tag>Higher Mathematics</tag>
      </tags>
  </entry>
  <entry>
    <title>JSP Computer experiments</title>
    <url>/2019/12/02/jsp%E4%B8%8A%E6%9C%BA%E5%AE%9E%E9%AA%8C/</url>
    <content><![CDATA[<p>大三上学期jsp实验</p>
<a id="more"></a>
<h4 id="实验二"><a href="#实验二" class="headerlink" title="实验二"></a>实验二</h4><p>实验任务<br>1 编写JSP页面rect.jsp实现如下表单。输入数字显示长方形面积，输入非数字有提示。如下图所示。</p>
<!-- more -->
<p>2编写JSP页面实现如下用户登录页面。输入用户名”admin”密码”123”显示登录成功。否则显示用户名和密码不正确。没有输入用户名或者密码提示，不能为空。<br>提示：判断字符串s1和s2是否相等。 s1.equals(s2)==true</p>
<p><img src="https://img-blog.csdnimg.cn/20191203220955722.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0ODI0NDAw,size_16,color_FFFFFF,t_70" alt="rect"><br><img src="https://img-blog.csdnimg.cn/20191205085834162.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0ODI0NDAw,size_16,color_FFFFFF,t_70" alt="login"></p>
<p><code>答案1：</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=&quot;text/html;charset=GB2312&quot; %&gt;</span><br><span class="line">&lt;HTML&gt;&lt;BODY&gt;</span><br><span class="line"> &lt;P&gt; 请输入矩形的长和宽:</span><br><span class="line">  &lt;FORM action=&quot;&quot; method=post name=form&gt;</span><br><span class="line">       &lt;P&gt;请输入长方形的长:&lt;INPUT type=&quot;text&quot; name=&quot;a&quot;&gt;</span><br><span class="line">       &lt;P&gt;请输入长方形的宽:&lt;INPUT type=&quot;text&quot; name=&quot;b&quot;&gt;</span><br><span class="line">       &lt;INPUT TYPE=&quot;submit&quot; value=&quot;送出&quot; name=submit&gt;</span><br><span class="line">  &lt;/FORM&gt;  </span><br><span class="line"></span><br><span class="line">  &lt;%   String string_a=request.getParameter(&quot;a&quot;),</span><br><span class="line">           string_b=request.getParameter(&quot;b&quot;);</span><br><span class="line">       </span><br><span class="line">           double a=0,b=0;</span><br><span class="line">  %&gt;</span><br><span class="line"></span><br><span class="line">      &lt;%  if(string_a==null)&#123;</span><br><span class="line">            string_a=&quot;0&quot;;</span><br><span class="line">            tring_b=&quot;0&quot;;  </span><br><span class="line">          &#125; </span><br><span class="line">      %&gt;</span><br><span class="line"></span><br><span class="line">       &lt;%  try &#123;   </span><br><span class="line">			a=Double.valueOf(string_a).doubleValue();//把string_a转换给double</span><br><span class="line">			b=Double.valueOf(string_b).doubleValue(); </span><br><span class="line">			double mianji=a*b;</span><br><span class="line">			out.print(&quot;&lt;BR&gt;&quot;+&quot;长方形面积：&quot;+mianji); </span><br><span class="line">           &#125;    </span><br><span class="line">     </span><br><span class="line">			catch(NumberFormatException e)&#123;</span><br><span class="line">				out.print(&quot;&lt;BR&gt;&quot;+&quot;请输入数字字符&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">     %&gt; </span><br><span class="line">&lt;/BODY&gt;&lt;/HTML&gt;</span><br></pre></td></tr></table></figure>

<p><code>答案2：</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=&quot;text/html;charset=GB2312&quot; %&gt;</span><br><span class="line">&lt;HTML&gt;&lt;BODY bgcolor=&quot;yellow&quot;&gt;</span><br><span class="line">&lt;FONT size=4&gt;</span><br><span class="line"> &lt;h1&gt; 欢迎来到登录界面！&lt;/h1&gt;</span><br><span class="line">  &lt;FORM action=&quot;&quot; method=post name=form&gt;</span><br><span class="line">       &lt;P&gt;用户名:&lt;INPUT type=&quot;text&quot; name=&quot;a&quot;&gt;</span><br><span class="line">       &lt;P&gt;密码:&lt;INPUT type=&quot;password&quot; name=&quot;b&quot;&gt;</span><br><span class="line">    &lt;p&gt; </span><br><span class="line">       &lt;INPUT TYPE=&quot;submit&quot; value=&quot;提交&quot; name=submit&gt;</span><br><span class="line">  &lt;/FORM&gt;  </span><br><span class="line">&lt;% </span><br><span class="line">      String user=request.getParameter(&quot;a&quot;);</span><br><span class="line">      String password=request.getParameter(&quot;b&quot;);</span><br><span class="line">%&gt;</span><br><span class="line"> &lt;% </span><br><span class="line">     if((user==null)||(password==null))</span><br><span class="line">     &#123;</span><br><span class="line">		user=&quot;&quot;;</span><br><span class="line">		password=&quot;&quot;;</span><br><span class="line">     &#125;</span><br><span class="line"> %&gt;</span><br><span class="line"> &lt;% </span><br><span class="line">     if(user.equals(&quot;&quot;)||password.equals(&quot;&quot;)||user.equals(&quot; &quot;)||password.equals(&quot; &quot;))</span><br><span class="line">    &#123;</span><br><span class="line">      out.println(&quot;用户名或密码不能为空 !&quot;);</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">       if(user.equals(&quot;admin&quot;)&amp;&amp;password.equals(&quot;123&quot;))</span><br><span class="line">       &#123;</span><br><span class="line">         out.print(&quot;登录成功!&quot;);</span><br><span class="line">       &#125;</span><br><span class="line">       else</span><br><span class="line">       &#123;</span><br><span class="line">        out.print(&quot;用户名或者密码不正确，登录不成功！ &quot;);</span><br><span class="line">       </span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> %&gt;</span><br><span class="line">    &lt;/FONT&gt;</span><br><span class="line">&lt;/BODY&gt;&lt;/HTML&gt;</span><br></pre></td></tr></table></figure>

<h4 id="实验三"><a href="#实验三" class="headerlink" title="实验三"></a>实验三</h4><p>实验任务:<br>1.编写两个JSP页面：main1.jsp和lader.jsp，将两个JSP页面保存在同一Web服务目录中，main1.jsp使用include动作标记动态加载lader.jsp。lader.jsp页面可以计算并显示梯形面积。当lader.jsp被加载时获取main1.jsp页面中include动作标记的param子标记提供的梯形的上底、下底和高。</p>
<p>2.编写两个JSP页面：main2.jsp和rect.jsp，将两个JSP页面保存在同一Web服务目录中，main2.jsp使用forward动作标记转向rect.jsp。rect.jsp页面可以计算并显示矩形面积。main2.jsp使用param子标记向rect.jsp页面提供矩形的长、宽。</p>
<h4 id="实验四"><a href="#实验四" class="headerlink" title="实验四"></a>实验四</h4><p><code>实验内容：</code><br>1.编写一个Tag文件，Rect.tag文件负责计算和显示矩形面积，要求编写一个JSP页面one.jsp，要使用Tag标记加载Rect.tag传递矩形的长和宽，打印出结果。</p>
<p>2.编写一个Tag文件，Tixing.tag文件负责计算和显示梯形面积。要求编写一个JSP页面two.jsp，调用Tixing.tag传递梯形的上底、下底、高。</p>
<p>3.编写一个Tag文件，Sum.tag文件负责计算和显示1！，2！到 n！的和。要求编写一个JSP页面three.jsp, 加载Sum.tag时传递参数n的值。</p>
<p><code>答案1：</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Rect.tag:</span><br><span class="line">&lt;%@ tag pageEncoding=&quot;gb2312&quot; %&gt;</span><br><span class="line">&lt;%@ attribute name=&quot;length&quot; required=&quot;true&quot; %&gt;</span><br><span class="line">&lt;%@ attribute name=&quot;width&quot; required=&quot;true&quot; %&gt;</span><br><span class="line">&lt;P&gt; 这是一个求矩形的面积tag文件</span><br><span class="line">&lt;%</span><br><span class="line">	double l = Double.parseDouble(length);</span><br><span class="line">	double w = Double.parseDouble(width);</span><br><span class="line">	out.println(&quot;矩形面积为：&quot;+l*w);</span><br><span class="line"> %&gt;</span><br><span class="line"> &lt;/P&gt;</span><br><span class="line">One.jsp</span><br><span class="line">&lt;%@ page language=&quot;java&quot; import=&quot;java.util.*&quot; pageEncoding=&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;%@ taglib tagdir=&quot;/WEB-INF/tags&quot; prefix=&quot;beijing&quot; %&gt;</span><br><span class="line">&lt;HTML&gt;</span><br><span class="line">&lt;BODY BGCOLOR=yellow&gt;</span><br><span class="line">&lt;font size=8&gt;</span><br><span class="line">&lt;beijing:Rect length=&quot;10&quot; width=&quot;5&quot; /&gt; </span><br><span class="line">&lt;/font&gt;</span><br><span class="line">&lt;/BODY&gt;</span><br><span class="line">&lt;/HTML&gt;</span><br></pre></td></tr></table></figure>

<p><code>答案2：</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> Tixing.tag:</span><br><span class="line">&lt;%@ tag pageEncoding=&quot;gb2312&quot; %&gt;</span><br><span class="line">&lt;%@ attribute name=&quot;upper&quot; required=&quot;true&quot; %&gt;</span><br><span class="line">&lt;%@ attribute name=&quot;lower&quot; required=&quot;true&quot; %&gt;</span><br><span class="line">&lt;%@ attribute name=&quot;height&quot; required=&quot;true&quot; %&gt;</span><br><span class="line">&lt;P&gt; 这是一个求梯形的面积tag文件</span><br><span class="line">&lt;%</span><br><span class="line">	double u = Double.parseDouble(upper);</span><br><span class="line">	double l = Double.parseDouble(lower);</span><br><span class="line">	double h = Double.parseDouble(height);</span><br><span class="line">	out.println(&quot;梯形面积为：&quot;+(u+l)*h/2);</span><br><span class="line"> %&gt;</span><br><span class="line"> &lt;/P&gt;</span><br><span class="line">Two.jsp:</span><br><span class="line">&lt;%@ page language=&quot;java&quot; import=&quot;java.util.*&quot; pageEncoding=&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;%@ taglib tagdir=&quot;/WEB-INF/tags&quot; prefix=&quot;beijing&quot; %&gt;</span><br><span class="line">&lt;HTML&gt;</span><br><span class="line">&lt;BODY BGCOLOR=yellow&gt;</span><br><span class="line">&lt;font size=8&gt;</span><br><span class="line">&lt;beijing:Tixing upper=&quot;4&quot; lower=&quot;5&quot; height=&quot;2&quot;/&gt; </span><br><span class="line">&lt;/font&gt;</span><br><span class="line">&lt;/BODY&gt;</span><br><span class="line">&lt;/HTML&gt;</span><br></pre></td></tr></table></figure>

<p><code>答案3：</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Sum.tag:</span><br><span class="line">&lt;%@ tag pageEncoding=&quot;gb2312&quot; %&gt;</span><br><span class="line">&lt;%@ attribute name=&quot;number&quot; required=&quot;true&quot; %&gt;</span><br><span class="line">&lt;P&gt; 这是一个求1！ - n！的和</span><br><span class="line">&lt;%</span><br><span class="line">	int n = Integer.parseInt(number);</span><br><span class="line">	int sum = 0;</span><br><span class="line">	int val = 1;</span><br><span class="line">	for(int i=1; i&lt;n+1; i++) &#123;</span><br><span class="line">		val *= i;</span><br><span class="line">		sum += val;</span><br><span class="line">	&#125;</span><br><span class="line">	out.print(&quot;1! - n! 的和为：&quot;+sum);</span><br><span class="line"> %&gt;</span><br><span class="line"> &lt;/P&gt;</span><br><span class="line">Three.jsp:</span><br><span class="line">&lt;%@ tag pageEncoding=&quot;gb2312&quot; %&gt;</span><br><span class="line">&lt;%@ attribute name=&quot;number&quot; required=&quot;true&quot; %&gt;</span><br><span class="line">&lt;P&gt; 这是一个求1！ - n！的和</span><br><span class="line">&lt;%</span><br><span class="line">	int n = Integer.parseInt(number);</span><br><span class="line">	int sum = 0;</span><br><span class="line">	int val = 1;</span><br><span class="line">	for(int i=1; i&lt;n+1; i++) &#123;</span><br><span class="line">		val *= i;</span><br><span class="line">		sum += val;</span><br><span class="line">	&#125;</span><br><span class="line">	out.print(&quot;1! - n! 的和为：&quot;+sum);</span><br><span class="line"> %&gt;</span><br><span class="line"> &lt;/P&gt;</span><br></pre></td></tr></table></figure>

<h4 id="实验五"><a href="#实验五" class="headerlink" title="实验五"></a>实验五</h4><p> 实验内容：</p>
<p> 1.编写一个Tag文件，Lader.tag文件负责计算梯形面积，返回Double型的结果result。要求编写一个JSP页面shiyan5.jsp，调用Lader.tag传递梯形的上底、下底、高。shiyan5.jsp显示返回的梯形面积。</p>
<p> 2.编写book.jsp页面，显示表单输入图书信息, 提交后显示图书信息，要求提交的书名，出版社实现中文乱码处理。</p>
<p><img src="https://img-blog.csdnimg.cn/20191205090859170.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0ODI0NDAw,size_16,color_FFFFFF,t_70" alt="book"></p>
<p><code>答案1：</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">shiyan5.jsp：</span><br><span class="line">&lt;%@ page language=&quot;java&quot; import=&quot;java.util.*&quot; pageEncoding=&quot;gb2312&quot;%&gt;</span><br><span class="line">&lt;%@ taglib tagdir=&quot;/WEB-INF/tags&quot; prefix=&quot;Mark&quot; %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;body BGCOLOR=yellow&gt;</span><br><span class="line">  	&lt;font size=&quot;8&quot;&gt;&lt;/font&gt;</span><br><span class="line">  	&lt;Mark:leader height=&quot;5&quot; lower=&quot;10&quot; upper=&quot;8&quot;&gt;&lt;/Mark:leader&gt;</span><br><span class="line">  	leader的面积是：&lt;%=result %&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">leader.tag：</span><br><span class="line">&lt;%@ tag pageEncoding=&quot;gb2312&quot; %&gt;</span><br><span class="line">&lt;%@ attribute name=&quot;upper&quot; required=&quot;true&quot; type=&quot;java.lang.Double&quot; %&gt;</span><br><span class="line">&lt;%@ attribute name=&quot;lower&quot; required=&quot;true&quot; type=&quot;java.lang.Double&quot; %&gt;</span><br><span class="line">&lt;%@ attribute name=&quot;height&quot; required=&quot;true&quot; type=&quot;java.lang.Double&quot; %&gt;</span><br><span class="line">&lt;%@ variable name-given=&quot;result&quot; variable-class=&quot;java.lang.Double&quot; scope=&quot;AT_END&quot;%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">	double area = (upper+lower)*height/2;</span><br><span class="line">	jspContext.setAttribute(&quot;result&quot;,new Double(area));</span><br><span class="line">	</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure>
<p><code>答案2：</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=&quot;text/html;charset=GB2312&quot; %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;form action=&quot;&quot; method=&quot;post&quot; name=&quot;form&quot;&gt;</span><br><span class="line">    	输入书名：&lt;INPUT type=&quot;text&quot; name=&quot;bookname&quot;&gt;&lt;br/&gt; </span><br><span class="line">       	输入书号：&lt;INPUT type=&quot;text&quot; name=&quot;booknumber&quot;&gt;&lt;br/&gt; </span><br><span class="line">       	输入出版社：&lt;INPUT type=&quot;text&quot; name=&quot;bookplace&quot;&gt;&lt;br/&gt; </span><br><span class="line">       	输入价格：&lt;INPUT type=&quot;text&quot; name=&quot;bookprice&quot;&gt;&lt;br/&gt; </span><br><span class="line">       	&lt;INPUT TYPE=&quot;submit&quot; value=&quot;提交&quot; name=&quot;submit&quot;&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    &lt;br/&gt;</span><br><span class="line">    书名是：</span><br><span class="line">   &lt;%  String name=request.getParameter(&quot;bookname&quot;);</span><br><span class="line">   if(name == null) name = &quot;null&quot;;</span><br><span class="line">   byte b1[]=name.getBytes(&quot;ISO-8859-1&quot;);</span><br><span class="line">   name=new String(b1);</span><br><span class="line">   %&gt;</span><br><span class="line">   &lt;%=name%&gt; </span><br><span class="line">&lt;BR&gt;书号是:</span><br><span class="line">   &lt;%  String number=request.getParameter(&quot;booknumber&quot;);</span><br><span class="line">   if(number == null) number = &quot;0&quot;;</span><br><span class="line">   byte b2[]=number.getBytes(&quot;ISO-8859-1&quot;);</span><br><span class="line">   number=new String(b2);</span><br><span class="line">   %&gt;</span><br><span class="line">   &lt;%=number%&gt; </span><br><span class="line">   &lt;br/&gt;</span><br><span class="line">    出版社是：</span><br><span class="line">   &lt;%  String place=request.getParameter(&quot;bookplace&quot;);</span><br><span class="line">   if(place == null) place = &quot;0.0&quot;;</span><br><span class="line">   byte b3[]=place.getBytes(&quot;ISO-8859-1&quot;);</span><br><span class="line">   place=new String(b3);</span><br><span class="line">   %&gt;</span><br><span class="line">   &lt;%=place%&gt;</span><br><span class="line">   &lt;br/&gt;</span><br><span class="line">    价格是：</span><br><span class="line">   &lt;%  String price=request.getParameter(&quot;bookprice&quot;);</span><br><span class="line">   if(price == null) price = &quot;0.0&quot;;</span><br><span class="line">   byte b4[]=price.getBytes(&quot;ISO-8859-1&quot;);</span><br><span class="line">   price=new String(b4);</span><br><span class="line">   %&gt;</span><br><span class="line">   &lt;%=price%&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<h4 id="实验九"><a href="#实验九" class="headerlink" title="实验九"></a>实验九</h4><p>1.编写Cubic长方体类，建立JSP页面cubic.jsp使用java bean 三个动作标记，实现输入长方体的三条边，点击提交显示结果如下图所示。参考书上的例题P212(三角形)<br><img src="https://img-blog.csdnimg.cn/20200103185904431.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020010318593078.png" alt="在这里插入图片描述"><br><code>Cubic.java:</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Cubic.java</span><br><span class="line">package tom.jiafei;</span><br><span class="line">public class Cubic </span><br><span class="line">&#123;</span><br><span class="line">  private double length;</span><br><span class="line">  private double width;</span><br><span class="line">  private double height;</span><br><span class="line">  private double area; //面积</span><br><span class="line">  private double cubic; //周长</span><br><span class="line">  public void setLength(double length)</span><br><span class="line">  &#123;</span><br><span class="line">	  this.length=length;</span><br><span class="line">  &#125;</span><br><span class="line">  public double getLength()</span><br><span class="line">  &#123;</span><br><span class="line">	  return this.length;</span><br><span class="line">  &#125;</span><br><span class="line">  public void setWidth(double width)</span><br><span class="line">  &#123;</span><br><span class="line">	  this.width=width;</span><br><span class="line">  &#125;</span><br><span class="line">  public double getWidth()</span><br><span class="line">  &#123;</span><br><span class="line">	  return this.width;</span><br><span class="line">  &#125;</span><br><span class="line">  public double getArea()//面积</span><br><span class="line">  &#123;</span><br><span class="line">	  return 2*(length*width+length*height+width*height);</span><br><span class="line">  &#125;</span><br><span class="line">  public double getCubic()//周长</span><br><span class="line">  &#123;</span><br><span class="line">	  return height*length*width;</span><br><span class="line">  &#125;</span><br><span class="line">  public void setHeight(double height) &#123;</span><br><span class="line">  	this.height = height;</span><br><span class="line">  &#125;</span><br><span class="line">  public double getHeight() &#123;</span><br><span class="line">	return height;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>Cubic.jsp:</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=&quot;text/html;charset=GB2312&quot; %&gt;</span><br><span class="line">&lt;%@ page import=&quot;tom.jiafei.Cubic&quot;  %&gt;</span><br><span class="line">&lt;jsp:useBean id=&quot;r&quot; class=&quot;tom.jiafei.Cubic&quot; scope=&quot;page&quot; /&gt;</span><br><span class="line">&lt;HTML&gt;&lt;font size=&quot;6&quot;&gt;&lt;BODY &gt;</span><br><span class="line">&lt;FORM action=&quot;&quot; Method=&quot;post&quot;&gt;</span><br><span class="line">&lt;P&gt;输入长方体的长:&lt;Input type=text name=&quot;length&quot; value=0&gt;&lt;/p&gt;</span><br><span class="line">&lt;P&gt;输入长方体的宽:&lt;Input type=text name=&quot;width&quot;  value=0&gt;&lt;/p&gt;</span><br><span class="line">&lt;P&gt;输入长方体的高:&lt;Input type=text name=&quot;height&quot;  value=0&gt;&lt;/p&gt;</span><br><span class="line">&lt;Input type=submit value=&quot;提交&quot;&gt;&lt;/FORM&gt;</span><br><span class="line">&lt;jsp:setProperty name=&quot;r&quot; property=&quot;*&quot; /&gt;</span><br><span class="line">你输入的长是:</span><br><span class="line">&lt;jsp:getProperty name=&quot;r&quot; property=&quot;length&quot; /&gt;&lt;br/&gt;</span><br><span class="line">你输入的宽是:</span><br><span class="line">&lt;jsp:getProperty name=&quot;r&quot; property=&quot;width&quot; /&gt;&lt;br/&gt;</span><br><span class="line">你输入的高是:</span><br><span class="line">&lt;jsp:getProperty name=&quot;r&quot; property=&quot;height&quot; /&gt;&lt;br/&gt;</span><br><span class="line">长方体的面积是：</span><br><span class="line">&lt;jsp:getProperty property=&quot;area&quot; name=&quot;r&quot;/&gt;&lt;br/&gt;</span><br><span class="line">长方体的体积是：</span><br><span class="line">&lt;jsp:getProperty property=&quot;cubic&quot; name=&quot;r&quot;/&gt;&lt;br/&gt;</span><br><span class="line">&lt;/FONT&gt;&lt;/BODY&gt;&lt;/HTML&gt;</span><br></pre></td></tr></table></figure>

<p>2.编写Book类，建立JSP页面book.jsp使用java bean 三个动作标记，实现输入图书信息，点击提交显示结果如下图所示。参考书上的例题P209页7-6。<br><img src="https://img-blog.csdnimg.cn/20200103190002785.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0ODI0NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200103190029836.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0ODI0NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><code>Book.java:</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package tom.jiafei;</span><br><span class="line">public class Book &#123;</span><br><span class="line">	 private String name;</span><br><span class="line">	 private String number;</span><br><span class="line">	 private double publish;</span><br><span class="line">	 private double price;</span><br><span class="line">	public void setName(String name) &#123;</span><br><span class="line">		this.name = name;</span><br><span class="line">	&#125;</span><br><span class="line">	public String getName() &#123;</span><br><span class="line">		return name;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setNumber(String number) &#123;</span><br><span class="line">		this.number = number;</span><br><span class="line">	&#125;</span><br><span class="line">	public String getNumber() &#123;</span><br><span class="line">		return number;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setPublish(double publish) &#123;</span><br><span class="line">		this.publish = publish;</span><br><span class="line">	&#125;</span><br><span class="line">	public double getPublish() &#123;</span><br><span class="line">		return publish;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setPrice(double price) &#123;</span><br><span class="line">		this.price = price;</span><br><span class="line">	&#125;</span><br><span class="line">	public double getPrice() &#123;</span><br><span class="line">		return price;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>Book.jsp:</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=&quot;text/html;charset=GB2312&quot; %&gt;</span><br><span class="line">&lt;%@ page import=&quot;tom.jiafei.Book&quot;  %&gt;</span><br><span class="line">&lt;jsp:useBean id=&quot;r&quot; class=&quot;tom.jiafei.Book&quot; scope=&quot;page&quot; /&gt;</span><br><span class="line">&lt;HTML&gt;&lt;BODY &gt;</span><br><span class="line">&lt;FORM action=&quot;&quot; Method=&quot;post&quot;&gt;</span><br><span class="line">&lt;P&gt;输入书名:&lt;Input type=text name=&quot;name&quot; &gt;&lt;/p&gt;</span><br><span class="line">&lt;P&gt;输入书号:&lt;Input type=text name=&quot;number&quot;  &gt;&lt;/p&gt;</span><br><span class="line">&lt;P&gt;输入出版社:&lt;Input type=text name=&quot;publish&quot;  &gt;&lt;/p&gt;</span><br><span class="line">&lt;P&gt;输入价格:&lt;Input type=text name=&quot;price&quot;  &gt;&lt;/p&gt;</span><br><span class="line">&lt;Input type=submit value=&quot;提交&quot;&gt;&lt;/FORM&gt;</span><br><span class="line">&lt;jsp:setProperty name=&quot;r&quot; property=&quot;*&quot; /&gt;</span><br><span class="line">你输入的书名:</span><br><span class="line">&lt;jsp:getProperty name=&quot;r&quot; property=&quot;name&quot; /&gt;&lt;br/&gt;</span><br><span class="line">你输入的书号:</span><br><span class="line">&lt;jsp:getProperty name=&quot;r&quot; property=&quot;number&quot; /&gt;&lt;br/&gt;</span><br><span class="line">你输入的出版社:</span><br><span class="line">&lt;jsp:getProperty name=&quot;r&quot; property=&quot;publish&quot; /&gt;&lt;br/&gt;</span><br><span class="line">长方体的价格是：</span><br><span class="line">&lt;jsp:getProperty property=&quot;price&quot; name=&quot;r&quot;/&gt;&lt;br/&gt;</span><br><span class="line">&lt;/BODY&gt;&lt;/HTML&gt;</span><br></pre></td></tr></table></figure>

<h4 id="实验十"><a href="#实验十" class="headerlink" title="实验十"></a>实验十</h4><p>1.在mysql中建立数据库books，其中有表：bookinfo(图书表)<br><img src="https://img-blog.csdnimg.cn/20200103190102143.png" alt="在这里插入图片描述"><br>2.创建页面showbook.jsp，加载数据库驱动，在页面以表格形式，显示图书信息。(参考第6章例题-example6_1)<br><img src="https://img-blog.csdnimg.cn/20200103190129391.png" alt="在这里插入图片描述"><br><code>代码:</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=&quot;text/html;charset=GB2312&quot; %&gt;</span><br><span class="line">&lt;%@ page import=&quot;java.sql.*&quot; %&gt;</span><br><span class="line">&lt;HTML&gt;&lt;BODY bgcolor=cyan&gt;</span><br><span class="line"> &lt;% Connection con;//连接</span><br><span class="line">    Statement sql;  //sql</span><br><span class="line">    ResultSet rs;   //结果</span><br><span class="line">    try&#123;  Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span><br><span class="line">    //加载驱动</span><br><span class="line">    &#125;</span><br><span class="line">    catch(Exception e)&#123;&#125;</span><br><span class="line">    try &#123; String uri= &quot;jdbc:mysql://127.0.0.1/warehouse&quot;;</span><br><span class="line">          String user=&quot;root&quot;;</span><br><span class="line">          String password=&quot;root&quot;;</span><br><span class="line">          con=DriverManager.getConnection(uri,user,password);</span><br><span class="line">          //也可以写成con=DriverManager.getConnection(uri+&quot;?user=root&amp;password=&quot;);</span><br><span class="line">          sql=con.createStatement();//创建sql对象</span><br><span class="line">          rs=sql.executeQuery(&quot;SELECT * FROM product &quot;);</span><br><span class="line">          out.print(&quot;&lt;table border=2&gt;&quot;);</span><br><span class="line">          out.print(&quot;&lt;tr&gt;&quot;);</span><br><span class="line">            out.print(&quot;&lt;th width=100&gt;&quot;+&quot;图书名&quot;);</span><br><span class="line">            out.print(&quot;&lt;th width=100&gt;&quot;+&quot;isbn&quot;);</span><br><span class="line">            out.print(&quot;&lt;th width=50&gt;&quot;+&quot;出版社&quot;);</span><br><span class="line">            out.print(&quot;&lt;th width=50&gt;&quot;+&quot;价格&quot;);</span><br><span class="line">             out.print(&quot;&lt;th width=50&gt;&quot;+&quot;版本号&quot;);</span><br><span class="line">          out.print(&quot;&lt;/TR&gt;&quot;);</span><br><span class="line">          while(rs.next())&#123;</span><br><span class="line">            out.print(&quot;&lt;tr&gt;&quot;);</span><br><span class="line">              out.print(&quot;&lt;td &gt;&quot;+rs.getString(1)+&quot;&lt;/td&gt;&quot;); </span><br><span class="line">              out.print(&quot;&lt;td &gt;&quot;+rs.getString(2)+&quot;&lt;/td&gt;&quot;);</span><br><span class="line">              out.print(&quot;&lt;td &gt;&quot;+rs.getString(&quot;出版社&quot;)+&quot;&lt;/td&gt;&quot;); </span><br><span class="line">              out.print(&quot;&lt;td &gt;&quot;+rs.getFloat(&quot;价格&quot;)+&quot;&lt;/td&gt;&quot;);</span><br><span class="line">               out.print(&quot;&lt;td &gt;&quot;+rs.getInt(&quot;版本号&quot;)+&quot;&lt;/td&gt;&quot;);</span><br><span class="line">            out.print(&quot;&lt;/tr&gt;&quot;) ; </span><br><span class="line">          &#125;</span><br><span class="line">          out.print(&quot;&lt;/table&gt;&quot;);</span><br><span class="line">          con.close();//关闭连接</span><br><span class="line">    &#125;</span><br><span class="line">    catch(SQLException e)&#123; </span><br><span class="line">          out.print(e);</span><br><span class="line">    &#125;</span><br><span class="line"> %&gt;</span><br><span class="line">&lt;/BODY&gt;&lt;/HTML&gt;</span><br></pre></td></tr></table></figure>

<h4 id="实验六"><a href="#实验六" class="headerlink" title="实验六"></a>实验六</h4><p>实验目的：</p>
<p>了解jsp中的内置对象request对象，掌握request对象的常用方法，掌握HTML表单的常用元素，了解response对象的作用，以及方法。能够编写表单处理不同元素的JSP页面。</p>
<p>实验任务：</p>
<p>1编写页面 Myrect.jsp 页面中有表单如图1所示。提交表单到get.jsp用表格形式显示结果。使用Rect.tag文件计算矩形面积，get.jsp传递长、宽参数给Rect.tag，之后Rect.tag返回面积结果给get.jsp，get.jsp在表格中显示面积如上图所示。（参考书上例example4_5.jsp）</p>
<p><img src="https://img-blog.csdnimg.cn/20200103185012585.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0ODI0NDAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200103185048375.png" alt="在这里插入图片描述"></p>
<p>2、编写页面zhuce.jsp 显示如下表单。其中专业：计算机系统结构，计算机应用，计算机网络。填写的密码由*号显示。（参考课堂练习2) 。结果页面是result.jsp<br>显示用户的注册信息。<br><img src="https://img-blog.csdnimg.cn/20200103185122998.png" alt="在这里插入图片描述"></p>
<p><code>代码call me (下同)</code></p>
<h4 id="实验七"><a href="#实验七" class="headerlink" title="实验七"></a>实验七</h4><p>1.使用session实现购物(输入用户名为yin，密码123 登录到shop.jsp页面)<br><img src="https://img-blog.csdnimg.cn/20200103185518188.png" alt="在这里插入图片描述"></p>
<p>shop.jsp:<br><img src="https://img-blog.csdnimg.cn/20200103185552151.png" alt="在这里插入图片描述"></p>
<p>account.jsp:<br><img src="https://img-blog.csdnimg.cn/20200103185650409.png" alt="在这里插入图片描述"></p>
<h4 id="实验八"><a href="#实验八" class="headerlink" title="实验八"></a>实验八</h4><p>一、实验目的<br>掌握JavaBean的编写规范，掌握useBean，setProperty, getProperty等动作标记的使用。<br>二、实验任务<br>1.建立JavaBean  Cubic长方体类。建立shiyan8_1.jsp页面使用useBean 等动作标记实现打印长方体的体积和面积。</p>
<p>2.建立JavaBean  Book类，(属性：书名，书号，出版社，价格) 。建立shiyan8_2.jsp页面使用useBean 等动作标记实现打印图书信息。</p>
]]></content>
      <categories>
        <category>front-end</category>
      </categories>
      <tags>
        <tag>JSP</tag>
      </tags>
  </entry>
  <entry>
    <title>Five chess</title>
    <url>/2019/11/30/%E4%BA%94%E5%AD%90%E6%A3%8B/</url>
    <content><![CDATA[<p>窗口五子棋的实现</p>
<a id="more"></a>
<p>大二下学期Java程序设计内容，<br>使用窗体简单实现五子棋小游戏<br><code>代码实现：</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import java.awt.*;</span><br><span class="line">import java.awt.event.ActionEvent;</span><br><span class="line">import java.awt.event.ActionListener;</span><br><span class="line">import java.awt.event.MouseAdapter;</span><br><span class="line">import java.awt.event.MouseEvent;</span><br><span class="line">import java.io.File;</span><br><span class="line">import java.io.FileInputStream;</span><br><span class="line">import java.io.FileWriter;</span><br><span class="line">import java.io.IOException;</span><br><span class="line"></span><br><span class="line">import javax.swing.*;</span><br><span class="line">class chess &#123;</span><br><span class="line">	public int X,Y;</span><br><span class="line">	public int flag;</span><br><span class="line">	public chess() &#123;</span><br><span class="line">		X=0;</span><br><span class="line">		Y=0;</span><br><span class="line">		flag=0;</span><br><span class="line">	&#125;</span><br><span class="line">	public chess(int x,int y) &#123;</span><br><span class="line">		X=x;</span><br><span class="line">		Y=y;</span><br><span class="line">		flag=0;</span><br><span class="line">	 &#125;</span><br><span class="line">&#125;</span><br><span class="line">public class FiveChess extends JPanel &#123;</span><br><span class="line">	public Graphics g;</span><br><span class="line">	public chess [][]xy=new chess[15][15];</span><br><span class="line">	public static void main(String[] args) &#123;</span><br><span class="line">		FiveChess fc=new FiveChess();</span><br><span class="line">		fc.go();</span><br><span class="line">	&#125;</span><br><span class="line">	public void go() &#123;</span><br><span class="line">		JFrame frame = new JFrame(&quot;五子棋&quot;);</span><br><span class="line">		frame.setLocation(200,150);</span><br><span class="line">		frame.setSize(800,530);</span><br><span class="line">		frame.setDefaultCloseOperation(3);</span><br><span class="line">		JMenuBar menubar=new JMenuBar();</span><br><span class="line">		JMenu menu1=new JMenu(&quot;开始&quot;);</span><br><span class="line">		JMenu menu2=new JMenu(&quot;帮助&quot;);</span><br><span class="line">		JMenuItem bstart=new JMenuItem(&quot;新游戏&quot;);</span><br><span class="line">		JMenuItem op=new JMenuItem(&quot;如何获胜&quot;);</span><br><span class="line">		menu1.add(bstart);</span><br><span class="line">		menu2.add(op);</span><br><span class="line">		menubar.add(menu1);</span><br><span class="line">		menubar.add(menu2);</span><br><span class="line">		frame.setJMenuBar(menubar);</span><br><span class="line">		</span><br><span class="line">		JTextArea text=new JTextArea();</span><br><span class="line">		text.setPreferredSize(new Dimension(200,100));</span><br><span class="line">		text.setEditable(false);</span><br><span class="line">		</span><br><span class="line">		JPanel panel1=new JPanel();</span><br><span class="line">		panel1.setPreferredSize(new Dimension(300,500));</span><br><span class="line">		panel1.setBackground(Color.white);</span><br><span class="line">		JButton bquit=new JButton(&quot;认输&quot;);</span><br><span class="line">		JButton bundo=new JButton(&quot;悔棋&quot;);</span><br><span class="line">		bquit.setPreferredSize(new Dimension(200,70));</span><br><span class="line">		bundo.setPreferredSize(new Dimension(200,70));</span><br><span class="line">		panel1.add(bquit);</span><br><span class="line">		panel1.add(bundo);</span><br><span class="line">		JRadioButton button1=new JRadioButton(&quot;人机对战&quot;);</span><br><span class="line">		JRadioButton button2=new JRadioButton(&quot;玩家对战&quot;);</span><br><span class="line">		button1.setOpaque(false);</span><br><span class="line">		button2.setOpaque(false);</span><br><span class="line">		button1.setPreferredSize(new Dimension(200,70));</span><br><span class="line">		button2.setPreferredSize(new Dimension(200,70));</span><br><span class="line">		ButtonGroup group=new ButtonGroup();</span><br><span class="line">		group.add(button1);</span><br><span class="line">		group.add(button2);</span><br><span class="line">		panel1.add(button1);</span><br><span class="line">		panel1.add(button2);</span><br><span class="line">		</span><br><span class="line">		panel1.add(text);</span><br><span class="line">		</span><br><span class="line">		this.setBackground(Color.orange);</span><br><span class="line">		frame.setLayout(new BorderLayout());</span><br><span class="line">		frame.add(this,BorderLayout.CENTER);</span><br><span class="line">		frame.add(panel1,BorderLayout.EAST);</span><br><span class="line">		frame.setVisible(true);</span><br><span class="line">		frame.setResizable(false);</span><br><span class="line">		g=this.getGraphics();</span><br><span class="line">		</span><br><span class="line">		setChess();</span><br><span class="line">		listener l=new listener();</span><br><span class="line">	    l.setG(g);</span><br><span class="line">	    l.setP(this);</span><br><span class="line">	    l.setChess(xy);</span><br><span class="line">	    l.setText(text);</span><br><span class="line">	    this.addMouseListener(l);</span><br><span class="line">	    bstart.addActionListener(l);</span><br><span class="line">	    bquit.addActionListener(l);</span><br><span class="line">	    op.addActionListener(l);</span><br><span class="line">	    bundo.addActionListener(l);</span><br><span class="line">	    button1.addActionListener(l);</span><br><span class="line">	    button2.addActionListener(l);</span><br><span class="line">	&#125;</span><br><span class="line">	public void setChess() &#123;</span><br><span class="line">		for(int i=0;i&lt;15;i++)&#123;</span><br><span class="line">            for(int j=0;j&lt;15;j++)&#123;</span><br><span class="line">                chess ch=new chess((j+1)*30,(i+1)*30);</span><br><span class="line">                xy[i][j]=ch;</span><br><span class="line">            &#125;               </span><br><span class="line">        &#125;</span><br><span class="line">	&#125;</span><br><span class="line">	public void draw(Graphics ag) &#123;</span><br><span class="line">		Graphics2D g=(Graphics2D)ag;</span><br><span class="line">		g.setRenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);</span><br><span class="line">		for(int i=0;i&lt;15;i++) &#123;</span><br><span class="line">			for(int j=0;j&lt;15;j++) &#123;</span><br><span class="line">				  g.setColor(Color.black);</span><br><span class="line">				  g.drawLine(30,30+i*30,450,30+i*30);</span><br><span class="line">	              g.drawLine(30+i*30,30,30+i*30,450);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		//System.out.println(&quot;黑方首下&quot;);</span><br><span class="line">	&#125;</span><br><span class="line">	public void paint(Graphics g) &#123;</span><br><span class="line">		super.paint(g);</span><br><span class="line">		draw(g);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">class listener extends MouseAdapter implements ActionListener&#123;</span><br><span class="line">    int mode;</span><br><span class="line">    int x,y;                  </span><br><span class="line">    Graphics2D g;       </span><br><span class="line">    int chesscount;             //连成一条线的同一颜色棋子数量</span><br><span class="line">    chess [][]xy;       </span><br><span class="line">    int col=2; </span><br><span class="line">    chess chessnew=new chess(); </span><br><span class="line">    JPanel panel;</span><br><span class="line">    JTextArea text;</span><br><span class="line">    public void setText(JTextArea text) &#123;</span><br><span class="line">    	this.text=text;</span><br><span class="line">    &#125;</span><br><span class="line">     public void setG(Graphics g)&#123;</span><br><span class="line">            this.g=(Graphics2D)g;</span><br><span class="line">        &#125; </span><br><span class="line">    public void setP(JPanel panel)&#123;</span><br><span class="line">        this.panel=panel;</span><br><span class="line">    &#125;</span><br><span class="line">    public void setChess(chess [][]xy)&#123;</span><br><span class="line">        this.xy=xy;</span><br><span class="line">    &#125;</span><br><span class="line">    public void actionPerformed(ActionEvent e) &#123;</span><br><span class="line">        String str= e.getActionCommand();</span><br><span class="line">        if(str.equals(&quot;如何获胜&quot;)) &#123;</span><br><span class="line">        	int b;</span><br><span class="line">        	String str1=&quot;&quot;;</span><br><span class="line">        	byte []tom=new byte[2];</span><br><span class="line">        	try &#123;</span><br><span class="line">        		FileInputStream in=new FileInputStream(&quot;帮助.txt&quot;);</span><br><span class="line">        		while((b=in.read(tom,0,2))!=-1) &#123;</span><br><span class="line">        			String s=new String(tom,0,b);</span><br><span class="line">        			str1+=s;</span><br><span class="line">        			//System.out.print(s);</span><br><span class="line">        		&#125;</span><br><span class="line">        		text.setText(str1);</span><br><span class="line">        		in.close();</span><br><span class="line">        	&#125;catch(IOException ee) &#123;</span><br><span class="line">        		text.setText(&quot;没找到帮助文档&quot;);//System.out.println(&quot;没找到帮助文档&quot;);</span><br><span class="line">        	&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        if(str.equals(&quot;新游戏&quot;)) &#123;</span><br><span class="line">        	for(int i=0;i&lt;15;i++)&#123;</span><br><span class="line">                for(int j=0;j&lt;15;j++)&#123;</span><br><span class="line">                    xy[i][j].flag=0;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        	col=2;</span><br><span class="line">            panel.paint(g);</span><br><span class="line">        &#125;</span><br><span class="line">        if(str.equals(&quot;认输&quot;))&#123;</span><br><span class="line">            if(col==1)&#123;</span><br><span class="line">            JOptionPane.showMessageDialog(null, &quot;白棋认输,黑棋胜&quot;); </span><br><span class="line">            &#125;</span><br><span class="line">            else&#123;</span><br><span class="line">            JOptionPane.showMessageDialog(null, &quot;黑棋认输,白棋胜&quot;);     </span><br><span class="line">            &#125;</span><br><span class="line">            for(int i=0;i&lt;15;i++)&#123;</span><br><span class="line">                for(int j=0;j&lt;15;j++)&#123;</span><br><span class="line">                    xy[i][j].flag=0;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            panel.paint(g);</span><br><span class="line">        &#125;</span><br><span class="line">        if(str.equals(&quot;悔棋&quot;)) &#123;</span><br><span class="line">        	if(chessnew.flag==1) &#123;</span><br><span class="line">        		col=1;</span><br><span class="line">        		text.setText(&quot;白方悔棋，请白方在落一子&quot;);//System.out.println(&quot;白方悔棋，请白方在落一子&quot;);</span><br><span class="line">        	&#125;</span><br><span class="line">        	else &#123;</span><br><span class="line">        		col=2;</span><br><span class="line">        		text.setText(&quot;黑方悔棋，请黑方在落一子&quot;);//System.out.println(&quot;黑方悔棋，请黑方在落一子&quot;);</span><br><span class="line">        	&#125;</span><br><span class="line">        	chessnew.flag=0;</span><br><span class="line">        	panel.paint(g);</span><br><span class="line">        	for(int i=0;i&lt;15;i++) &#123;</span><br><span class="line">        		for(int j=0;j&lt;15;j++) &#123;</span><br><span class="line">        			if(xy[i][j].flag!=0) &#123;</span><br><span class="line">        				if(xy[i][j].flag==1) &#123;</span><br><span class="line">        					g.setColor(Color.white);</span><br><span class="line">        					g.fillOval(xy[i][j].X-10, xy[i][j].Y-10,20,20);</span><br><span class="line">        				&#125;</span><br><span class="line">        				else &#123;</span><br><span class="line">        					g.setColor(Color.black);</span><br><span class="line">        					g.fillOval(xy[i][j].X-10, xy[i][j].Y-10,20,20);	</span><br><span class="line">        				&#125;</span><br><span class="line">        			&#125;</span><br><span class="line">        		&#125;</span><br><span class="line">        	&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        if(str.equals(&quot;人人对战&quot;))&#123;</span><br><span class="line">            mode=11;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    public void mouseClicked(MouseEvent e) &#123;</span><br><span class="line">        g.setRenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);</span><br><span class="line">        x=e.getX();</span><br><span class="line">        y=e.getY();</span><br><span class="line">        for(int i=0;i&lt;15;i++)&#123;</span><br><span class="line">        	for(int j=0;j&lt;15;j++) &#123;</span><br><span class="line">               if(Math.abs(x-xy[i][j].X)&lt;10&amp;&amp;Math.abs(y-xy[i][j].Y)&lt;10) &#123;</span><br><span class="line">                    if(xy[i][j].flag==0) &#123;</span><br><span class="line">                        if(col == 1)&#123;  </span><br><span class="line">                        	g.setColor(Color.white);//椭圆的左上角xy坐标，椭圆的宽度、高度</span><br><span class="line">                            g.fillOval(xy[i][j].X-12, xy[i][j].Y-12,20,20);</span><br><span class="line">                            xy[i][j].flag=1;          </span><br><span class="line">                            chessnew=xy[i][j]; </span><br><span class="line">                            col=2;</span><br><span class="line">                            text.setText(&quot;该黑方下棋&quot;);//System.out.println(&quot;该黑方下棋&quot;);</span><br><span class="line">                        &#125;</span><br><span class="line">                        else if(col==2)&#123;</span><br><span class="line">                        	</span><br><span class="line">                        	g.setColor(Color.black);</span><br><span class="line">                            g.fillOval(xy[i][j].X-12, xy[i][j].Y-12,20,20);</span><br><span class="line">                            xy[i][j].flag=2;   </span><br><span class="line">                            col=1;</span><br><span class="line">                            text.setText(&quot;该白方下棋&quot;);//System.out.println(&quot;该白方下棋&quot;);</span><br><span class="line">                        &#125;</span><br><span class="line">                        checkChess( xy[i][j]);</span><br><span class="line">                     &#125;   </span><br><span class="line">                    else	 text.setText(&quot;这里不能落子&quot;);//System.out.println(&quot;这里不能落子&quot;);</span><br><span class="line">                    &#125;</span><br><span class="line">        		&#125;</span><br><span class="line">            &#125;</span><br><span class="line">       &#125;</span><br><span class="line">    public void checkChess(chess ch)&#123;</span><br><span class="line">        int count1=1;</span><br><span class="line">        int	count2=1;</span><br><span class="line">        int count3=1;</span><br><span class="line">        int count4=1;</span><br><span class="line">        int x=ch.Y/30-1;</span><br><span class="line">        int y=ch.X/30-1;</span><br><span class="line">        for(int j=y+1;j&lt;15;j++)&#123;              </span><br><span class="line">            if(xy[x][y].flag==xy[x][j].flag)&#123; </span><br><span class="line">                count1++;</span><br><span class="line">        &#125;</span><br><span class="line">            else</span><br><span class="line">                break;                                          </span><br><span class="line">        &#125;</span><br><span class="line">        for(int j=y-1;j&gt;=0;j--)&#123;                         </span><br><span class="line">            if(xy[x][y].flag==xy[x][j].flag)&#123;</span><br><span class="line">                count1++;</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">        if(count1&gt;=5)&#123;                                  </span><br><span class="line">            if(xy[x][y].flag==1)</span><br><span class="line">            	JOptionPane.showMessageDialog(null, &quot;白棋胜出&quot;);  </span><br><span class="line">            else</span><br><span class="line">            	JOptionPane.showMessageDialog(null, &quot;黑棋胜出&quot;); </span><br><span class="line">            for(int i=0;i&lt;15;i++)&#123;</span><br><span class="line">                for(int j=0;j&lt;15;j++)&#123;</span><br><span class="line">                    xy[i][j].flag=0;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            panel.paint(g);</span><br><span class="line">        &#125;</span><br><span class="line">        for(int i=x-1;i&gt;=0;i--)&#123;              </span><br><span class="line">            if(xy[x][y].flag==xy[i][y].flag&amp;&amp;xy[x][y].flag!=0)&#123;</span><br><span class="line">                count2++;</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">                break;</span><br><span class="line">        &#125;                                                       </span><br><span class="line">        for(int i=x+1;i&lt;15;i++)&#123;                                </span><br><span class="line">            if(xy[x][y].flag==xy[i][y].flag&amp;&amp;xy[x][y].flag!=0)&#123;</span><br><span class="line">                count2++;</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">        if(count2&gt;=5)&#123;                                  </span><br><span class="line">            if(xy[x][y].flag==1)</span><br><span class="line">            	JOptionPane.showMessageDialog(null, &quot;白棋胜出&quot;); </span><br><span class="line">            else</span><br><span class="line">            	JOptionPane.showMessageDialog(null, &quot;黑棋胜出&quot;); </span><br><span class="line">            for(int i=0;i&lt;15;i++)&#123;</span><br><span class="line">                for(int j=0;j&lt;15;j++)&#123;</span><br><span class="line">                    xy[i][j].flag=0;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            panel.paint(g);</span><br><span class="line">        &#125;</span><br><span class="line">        for(int i=x-1,j=y+1;i&gt;=0&amp;&amp;j&lt;15;i--,j++)&#123;</span><br><span class="line">            if(xy[x][y].flag==xy[i][j].flag&amp;&amp;xy[x][y].flag!=0)&#123;</span><br><span class="line">                count3++;</span><br><span class="line">            &#125;</span><br><span class="line">            else break;</span><br><span class="line">        &#125;</span><br><span class="line">        for(int i=x+1,j=y-1;j&gt;=0&amp;&amp;i&lt;15;j--,i++)&#123;</span><br><span class="line">            if(xy[x][y].flag==xy[i][j].flag&amp;&amp;xy[x][y].flag!=0)&#123;</span><br><span class="line">                count3++;</span><br><span class="line">            &#125;</span><br><span class="line">            else break;</span><br><span class="line">        &#125;</span><br><span class="line">       if(count3&gt;=5)&#123;</span><br><span class="line">            if(xy[x][y].flag==1)</span><br><span class="line">                JOptionPane.showMessageDialog(null, &quot;白棋胜出&quot;); </span><br><span class="line">            else</span><br><span class="line">                JOptionPane.showMessageDialog(null, &quot;黑棋胜出&quot;);</span><br><span class="line">            for(int i=0;i&lt;15;i++)&#123;</span><br><span class="line">                for(int j=0;j&lt;15;j++)&#123;</span><br><span class="line">                    xy[i][j].flag=0;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            panel.paint(g);</span><br><span class="line">        &#125;</span><br><span class="line">       for(int i=x+1,j=y+1;i&lt;15&amp;&amp;j&lt;15;i++,j++)&#123; </span><br><span class="line">           if(xy[x][y].flag==xy[i][j].flag&amp;&amp;xy[x][y].flag!=0)&#123;</span><br><span class="line">               count4++;</span><br><span class="line">           &#125;</span><br><span class="line">           else break;</span><br><span class="line">       &#125;</span><br><span class="line">       for(int i=x-1,j=y-1;j&gt;=0&amp;&amp;i&gt;=0;j--,i--)&#123;</span><br><span class="line">           if(xy[x][y].flag==xy[i][j].flag&amp;&amp;xy[x][y].flag!=0)&#123;</span><br><span class="line">               count4++;</span><br><span class="line">           &#125;</span><br><span class="line">           else break;</span><br><span class="line">       &#125;</span><br><span class="line">       if(count4&gt;=5)&#123;</span><br><span class="line">           if(xy[x][y].flag==1)</span><br><span class="line">               JOptionPane.showMessageDialog(null, &quot;白棋胜出&quot;); </span><br><span class="line">           else</span><br><span class="line">               JOptionPane.showMessageDialog(null, &quot;黑棋胜出&quot;);</span><br><span class="line">           for(int i=0;i&lt;15;i++)&#123;</span><br><span class="line">               for(int j=0;j&lt;15;j++)&#123;</span><br><span class="line">                   xy[i][j].flag=0;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           panel.paint(g);</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>front-end</category>
      </categories>
      <tags>
        <tag>Five Chess</tag>
      </tags>
  </entry>
  <entry>
    <title>Process classical synchronization problem</title>
    <url>/2019/11/28/%E8%BF%9B%E7%A8%8B%E7%BB%8F%E5%85%B8%E5%90%8C%E6%AD%A5%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>进程经典同步问题</p>
<a id="more"></a>
<h3 id="哲学家进餐问题-生产者消费者问题-读者-写者问题-银行家算法"><a href="#哲学家进餐问题-生产者消费者问题-读者-写者问题-银行家算法" class="headerlink" title="哲学家进餐问题 生产者消费者问题 读者-写者问题  银行家算法"></a>哲学家进餐问题 生产者消费者问题 读者-写者问题  银行家算法</h3><h4 id="生产者消费者问题："><a href="#生产者消费者问题：" class="headerlink" title="生产者消费者问题："></a>生产者消费者问题：</h4><p>①生产者—消费者之间的同步关系表现为：一旦缓冲池中所有缓冲区均装满产品时，生产者必须等待消费者提供空缓冲区；一旦缓冲池中所有缓冲区全为空时，消费者必须等待生产者提供满缓冲区。 </p>
<p>②生产者—消费者之间还有互斥关系：由于缓冲池是临界资源，所以任何进程在对缓冲区进行存取操作时都必须和其他进程互斥进行。</p>
<p>PV操作题目分析的步骤：</p>
<p>1.关系分析。找出题目中描述的各个进程，分析它们之间的同步、互斥关系。</p>
<p>2.整理思路。根据各进程的操作流程确定PV操作的大致顺序。</p>
<p>3.设置信号量。设置需要的信号量，并根据题目条件确定信号量的初值。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">semaphore mutex = 1;  //互斥信号量</span><br><span class="line">semaphore empty = n;  //同步信号量。空闲缓冲区的数量</span><br><span class="line">semaphore full = 0;   //同步信号量。产品的数量，非空缓冲区的数量</span><br><span class="line">producer()&#123;</span><br><span class="line">    while(1)&#123;</span><br><span class="line">      生成一个产品;</span><br><span class="line">      P(empty); //消耗一个空闲缓冲区</span><br><span class="line">      P(mutex);</span><br><span class="line">      把产品放入缓冲区;</span><br><span class="line">      V(mutex);</span><br><span class="line">      V(full)   //增加一个产品</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">consumer()&#123;</span><br><span class="line">    while(1)&#123;</span><br><span class="line">      P(full);   //消耗一个产品</span><br><span class="line">      P(mutex);</span><br><span class="line">      从缓冲区取出一个产品;</span><br><span class="line">      V(mutex);</span><br><span class="line">      V(empty);  //增加一个空闲缓冲区</span><br><span class="line">      使用产品;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="哲学家进餐问题："><a href="#哲学家进餐问题：" class="headerlink" title="哲学家进餐问题："></a>哲学家进餐问题：</h4><p>问题描述：</p>
<p>5个哲学家围坐在一个圆桌上，每两个哲学家之间都有一只筷子，哲学家平时进行思考，只有当他们饥饿时，才拿起筷子吃饭。规定每个哲学家只能先取其左边筷子，然后取其右边筷子，然后才可以吃饭。</p>
<p>分析：</p>
<p>每一只筷子都是一个临界资源，设置5个互斥信号量。Semaphore stcik[5]={1,1,1,1,1}因为：只有占有左边筷子-&gt;占有右边筷子-&gt;吃饭所以p(左边筷子)-&gt;p(右边筷子)-&gt;吃饭</p>
<p>实现：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">main()&#123;</span><br><span class="line">	philosopher(0);//注意不可以用循环，因为此中是4个并列的进程。</span><br><span class="line">	philosopher(1);</span><br><span class="line">	philosopher(2);</span><br><span class="line">	philosopher(3);</span><br><span class="line">	philosopher(4);</span><br><span class="line">&#125;</span><br><span class="line">philosopher(int i)&#123;</span><br><span class="line">	while(1)&#123;</span><br><span class="line">		思考；</span><br><span class="line">		p(stick[i]);//取左边筷子</span><br><span class="line">		p(stick[i+1]);//取右边筷子</span><br><span class="line"></span><br><span class="line">		进餐；</span><br><span class="line">		V(stick[i]);</span><br><span class="line">		v(stick[i+1]);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>问题：</p>
<p>如果5个哲学家同时拿起自己左边的筷子，就会发生死锁。</p>
<p>防止死锁的方法：</p>
<p>（1）方法一：</p>
<p>规定在拿到左侧的筷子后，先检查右面的筷子是否可用。如果不可用，则先放下左侧筷子， 等一段时间再重复整个过程。</p>
<p>问题：发生饥饿现象；</p>
<p>如果同时拿起左边筷子，则右边的筷子都不可用，则放下，然后再次拿起……则谁都无法就餐</p>
<p>（2）方法二：</p>
<p>最多允许四个哲学家同时进餐,以保证至少有一个哲学家能够进餐,最终总会释放出他所使用过的两支筷子,从而可使更多的哲学家进餐。</p>
<p>伪码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">semaphore chopstick[5]=&#123;1，1，1，1，1&#125;;</span><br><span class="line">semaphore room=4;</span><br><span class="line">void philosopher(int i)</span><br><span class="line">&#123;</span><br><span class="line">	while(true)</span><br><span class="line">	&#123;</span><br><span class="line">		think();</span><br><span class="line">		wait(room); //请求进入房间进餐</span><br><span class="line">		wait(chopstick[i]); //请求左手边的筷子</span><br><span class="line">		wait(chopstick[(i+1)%5]); //请求右手边的筷子</span><br><span class="line">		eat();</span><br><span class="line">		signal(chopstick[(i+1)%5]); //释放右手边的筷子</span><br><span class="line">		signal(chopstick[i]); //释放左手边的筷子</span><br><span class="line">		signal(room); //退出房间释放信号量room</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>（3）方法三：将拿左筷子，与拿右筷子当做一个原子操作：（即只有当左右筷子均可以拿到时，才拿筷子。</p>
<p>（4）方法四：规定奇数号的哲学家先拿起他左边的筷子，然后再去拿他右边的筷子;而偶数号 的哲学家则相反。</p>
<p>伪码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">semaphore chopstick[5]=&#123;1，1，1，1，1&#125;;</span><br><span class="line">void philosopher(int i)</span><br><span class="line">	&#123;</span><br><span class="line">		while(true)</span><br><span class="line">		&#123;</span><br><span class="line">			think();</span><br><span class="line">			if(i%2 == 0) //偶数哲学家，先右后左。</span><br><span class="line">				&#123;</span><br><span class="line">					P (chopstick[ i + 1 ] mod 5) ;</span><br><span class="line">					P (chopstick[ i]) ;</span><br><span class="line">					eat();</span><br><span class="line">					V (chopstick[ i + 1 ] mod 5) ;</span><br><span class="line">					V (chopstick[ i]) ;</span><br><span class="line">				&#125;</span><br><span class="line">			Else //奇数哲学家，先左后右。</span><br><span class="line">				&#123;</span><br><span class="line">					p (chopstick[ i]) ;</span><br><span class="line">					p (chopstick[ i + 1 ] mod 5) ;</span><br><span class="line">					eat();</span><br><span class="line">					V (chopstick[ i]) ;</span><br><span class="line">					V (chopstick[ i + 1 ] mod 5) ;</span><br><span class="line">				&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="读者-写者问题"><a href="#读者-写者问题" class="headerlink" title="读者-写者问题"></a>读者-写者问题</h4><p>读者优先：</p>
<p>互斥信号量wrt，初值是1，代表一个共享文件，解决“读－写”互斥，“写－写”互斥。一个记数器，即整型变量readcount，记录读者数，初值是0。 来一个读者， readcount加1 当readcount ＝1表示是第一个读者， 则需要执行p操作抢占文件；否则表示已有读者在安全的读数据。 走一个读者，readcount减1 当readcount ＝0表示是最后一个读者，则需要v操作释放资源；否则表示还有读者在读数据。readcount 为多个读者共享的变量，是临界资源。用互斥信号量mutex控制, mutex初值是1。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int readcount=0; </span><br><span class="line">semaphore mutex=1, wrt=1 ; </span><br><span class="line"> </span><br><span class="line">读者进程：</span><br><span class="line">        wait (mutex);</span><br><span class="line">	readcount++;	</span><br><span class="line">	if (readcount == 1)</span><br><span class="line">	       wait(wrt);</span><br><span class="line">	signal (mutex);</span><br><span class="line">		…</span><br><span class="line">	   reading is performed</span><br><span class="line">		 …</span><br><span class="line">	wait (mutex);</span><br><span class="line">	readcount--;</span><br><span class="line">	if (readcount == 0)</span><br><span class="line">		signal (wrt);</span><br><span class="line">	signal (mutex);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">写者进程：     </span><br><span class="line">      wait(wrt);</span><br><span class="line">	    …</span><br><span class="line">         writing is performed</span><br><span class="line">	    …</span><br><span class="line">      signal(wrt);</span><br></pre></td></tr></table></figure>
<p>写者优先:</p>
<p>在读者优先的基础上,增加信号量r，初值是1：当至少有一个写进程准备访问数据区时，用于禁止所有的读进程。增加一个记数器，即整型变量writecount，记录写者数，初值是0。 writecount为多个写者共享的变量，是临界资源。用互斥信号量mutex2控制, mutex2初值是1。增加mutex3，初值是1：在r上不允许建造长队列，否则写进程将不能跳过这个队列，因此，只允许一个读进程在r上排队，而所有其他读进程在等待r之前，在信号量mutex3上排队。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int readcount=0, writecount=0; </span><br><span class="line">semaphore mutex1=1, mutex2=1, mutex3=1, w=1, r=1 ; </span><br><span class="line"> </span><br><span class="line">读者进程：</span><br><span class="line">P(mutex 3);</span><br><span class="line">   P(r);</span><br><span class="line">      P(mutex 1);</span><br><span class="line">         readcount++;</span><br><span class="line">         if (readcount == 1 ) </span><br><span class="line">            P(w);</span><br><span class="line">      V(mutex 1);</span><br><span class="line">    V(r);</span><br><span class="line">V(mutex 3);</span><br><span class="line">      reading is performed</span><br><span class="line">P(mutex 1);</span><br><span class="line">    readcount --;</span><br><span class="line">    if (readcount == 0 )</span><br><span class="line">             V(w);</span><br><span class="line">V(mutex 1);</span><br><span class="line"> </span><br><span class="line">写者进程：     </span><br><span class="line">P(mutex 2);</span><br><span class="line">    writecount++;</span><br><span class="line">    if (writecount == 1 )</span><br><span class="line">           P(r);</span><br><span class="line">V(mutex 2);</span><br><span class="line">P(w);</span><br><span class="line">    writing is performed</span><br><span class="line">V(w);</span><br><span class="line">P(mutex 2);</span><br><span class="line">    writecount --;</span><br><span class="line">    if (writecount == 0)</span><br><span class="line">           V(r);</span><br><span class="line"></span><br><span class="line">V(mutex 2);</span><br></pre></td></tr></table></figure>
<p>读写公平:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int readcount=0; </span><br><span class="line">semaphore mutex=1, rw=1 w=1; </span><br><span class="line"> </span><br><span class="line">读者进程：</span><br><span class="line">        wait (w);</span><br><span class="line">        wait (mutex);</span><br><span class="line">        if (readcount == 0)</span><br><span class="line">	       wait(rw);</span><br><span class="line">    	readcount++;	</span><br><span class="line">    	signal (mutex);</span><br><span class="line">        signal (w);</span><br><span class="line">		…</span><br><span class="line">    	   reading is performed</span><br><span class="line">		 …</span><br><span class="line">    	wait (mutex);</span><br><span class="line">    	readcount--;</span><br><span class="line">    	if (readcount == 0)</span><br><span class="line">    		signal (rw);</span><br><span class="line">    	signal (mutex);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">写者进程：     </span><br><span class="line">    wait(w);</span><br><span class="line">    wait(rw);</span><br><span class="line">	    …</span><br><span class="line">         writing is performed</span><br><span class="line">	    …</span><br><span class="line">    signal(rw);</span><br><span class="line">    signal(w);</span><br></pre></td></tr></table></figure>
<h4 id="银行家算法："><a href="#银行家算法：" class="headerlink" title="银行家算法："></a>银行家算法：</h4><p>参照该博客学的：<br><a href="https://blog.csdn.net/qq_40693171/" target="_blank" rel="noopener">https://blog.csdn.net/qq_40693171/</a><br>article/details/84780224</p>
]]></content>
      <tags>
        <tag>OS</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring introduce</title>
    <url>/2019/11/27/%E6%98%A5%E5%A4%A9spring/</url>
    <content><![CDATA[<p>Spring 简单介绍</p>
<a id="more"></a>
<p>Spring框架是由于软件开发的复杂性而创建的。</p>
<p>Spring使用的是基本的JavaBean来完成以前只可能由EJB完成的事情。然而，Spring的用途不仅仅限于服务器端的开发。从简单性、可测试性和松耦合性角度而言，绝大部分Java应用都可以从Spring中受益。</p>
<p>◆·目的·：解决企业应用开发的复杂性</p>
<p>◆·功能·：使用基本的JavaBean代替EJB，并提供了更多的企业应用功能</p>
<p>◆·范围·：任何Java应用</p>
<p>Spring是一个轻量级控制反转(IoC)和面向切面(AOP)的容器框架。</p>
]]></content>
      <categories>
        <category>back-end</category>
      </categories>
      <tags>
        <tag>SSM-framework</tag>
      </tags>
  </entry>
</search>
